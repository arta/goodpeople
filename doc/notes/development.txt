################################################################################
11-5-24: #######################################################################
• Updating Zurb's Foundation
: extremely laborious in thehouse, less turbulent in goodpeople?
: abbreviated notes:

  1.  % bin/bundle remove sassc
  2.  % bin/bundle add dartsass-rails
  3.  % bin/rails s     #=> LoadError at /intro cannot load such file -- sassc

  : as expected now after thehouse experience
  : the specific case per
    https://github.com/rails/dartsass-rails?tab=readme-ov-file#running-locally
    is running locally with:

      % rails s

  : rather then:

      % bin/dev

  : which has to be installed first following instructions above:
    https://github.com/rails/dartsass-rails?tab=readme-ov-file#installation
    to run the Dart Sass process (precompiling our sass files)

  4.  % bin/rails dartsass:install

  : this created a bunch of files & additions/changes to existing files, e.g.:
    /app/assets/builds/application.css (= precompilation, re-allows `% rails s`)
    /app/assets/config/manifest.js (adds link to the precompiles in the /builds)
    /app/bin/dev (allows `% bin/dev`)
    Procfile.dev (runs `% rails s`, and `% rails dartsass:watch` #= the watcher)
    .gitignore (ignores the precompilations in the /builds)

  : A long list of detailed deprecation messages was listed next
    : the # is a line in the always named & linked respective file
    : uh oh, fixing this will require a major rewrite:

      ╷
    1 │ @import "foundation_and_overrides";
      │         ^^^^^^^^^^^^^^^^^^^^^^^^^^
      ╵
        app/assets/stylesheets/application.scss 1:9  root stylesheet

    Deprecation Warning: Sass @import rules are deprecated and will be removed
    in Dart Sass 3.0.0.

    More info and automated migrator: https://sass-lang.com/d/import

    ..
        ╷
    116 │   $keep: if(index('keys' 'values', $keep), $keep, 'both');
        │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        ╵
    ..
        ╷
    124 │       $values: append($values, $val);
        │                ^^^^^^^^^^^^^^^^^^^^^
        ╵
    ..

  5. Otherwise, that's that, all works !

  : this was just update of gem sassc to gem dartsass-rails
    : which internally depends on gem sass-embedded
      : which gem foundation-rails 6.9.x will(?) have as a dependency when fixed

  : = this was NOT an upgrade of foundation-rails 6.6.2 to 6.9.x,
    : just a dependency upgrade
    : bumping foundation-rails 6.6.2 to 6.9.x is next step

################################################################################



################################################################################
5-9-24: ########################################################################
• Colorized `% rails app:update` diff output doesn't work
  : (this is adopted copy from thehouse dev't notes)
  : was not present in goodpeople (nor thehouse), but was present in rhouse2
    : missing in VS Code terminal, as well as in Mac OS terminal
  : could not figure out why
  : Copee did not know
  : Cody did not know
• I manually compared rhouse2 & thehouse Gemfiles and figured it right away:
  : gem 'solargraph' was missing in goodpeople (and thehouse before, too)
  : the real culprit may be one of solargraph's numerous dependencies installed
    : good candidate: 'diff-lcs'
• Gotcha of sorts:
  : solargraph is installed as part of VS Code setup for Ruby related extensions
    : so this surprised me a bit,
    : is this because solargraph installed by/for VS Code
      does not install the same dependencies
      as when it is installed from Gemfile?
    : certainly plausible (and likely)
  : Anyway, got green & red colored diff on `% rails app:update` now!

################################################################################



################################################################################
11-16-23: ######################################################################
################################################################################
• TODO: remember to remove downgrading to Node 16.13.1 when upgrading everything
: package.json:
    "engines": { "node": "16.13.1" }              <= manually ?
    "devDependencies": { "webpack": "^4.46.0" }   <= manually ?
: .tool-versions: nodejs 16.13.1 <= % asdf unset local (node) or just delete

################################################################################
• Downgrade Node.js and webpack:
  (note: used Copilot for the first time, great.)

: Why?
:: failed:
    % heroku push staging
:: Heroku dependencies issues, ultimately going down to SSL, Node.js, webpack

: Note:
:: real solutionis to upgrade Node.js to latest, but I chose this route for now
:: to avoid dealing with the possible cascade of failing dependencies

: Steps:
: 0. In Heroku dashboard:
: :: 1. add official Heroku Node.js buildpack
: :: 2. order it atop so it loads first, before the ruby buildpack
: :: note: this may not have been necessary after all, it was put in place
: ::       while trying to use asdf on Heroku but that didn't work
: 1. % asdf install nodejs 16.13.1 #<= latest Long Term Support (LTS) version
: 2. % asdf local nodejs 16.13.1   #<= adds it to .tool-versions
: 3. add "node": 16.13.1 to package.json under "engines": {}
: 4. add "webpack": 4.46.0 to package.json under "devDependencies": {}
:    note: this was added as 5.0.0 originally while adding node 16.13.1, but
:          that webpack 5.0.0 version was in conflict with 4.46.0 in yarn.lock
:          and so specifying 4.46.0 in package.json may not have been necessary
:          since it is the one in yarn.lock

: Footnote:
:: node & webpack specs may be safely removed from package.json
:: once local Node.js upgraded to latest (?)

################################################################################



################################################################################
11-4-21: #######################################################################
• Dev environment (Gemfile, asdf (.tool-versions)) notes:

: Decided to manage Ruby version in Gemfile only
:: Why?
:: Heroku selects Ruby version from Gemfile, not from .tool-version
:: https://devcenter.heroku.com/articles/ruby-versions
: So there's no need to set a local version by asdf
: Ok, but removing .tool-version resulted in a whole bunch of
  `already initialized` and similar warnings upon running server

  In terminal:
    ..
    arta@DartBS goodpeople % rails s
    /Users/arta/.asdf/installs/ruby/3.0.2/lib/ruby/3.0.0/fileutils.rb:105: warni
    ng: already initialized constant FileUtils::VERSION
    /Users/arta/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/gems/fileutils-1.6
    .0/lib/fileutils.rb:105: warning: previous definition of VERSION was here
    /Users/arta/.asdf/installs/ruby/3.0.2/lib/ruby/3.0.0/fileutils.rb:1284: warn
    ing: already initialized constant FileUtils::Entry_::S_IF_DOOR
    ..
    21 more like this .. :)

: Very annoying, found solution:

    arta@DartBS goodpeople % bundle clean --force

: https://stackoverflow.com/a/59449848/247626
: Now, '% bundle clean --force' fixed it, running server shows no warnings
:: BUT
:: It REMOVED ALL GEMS NOT USED in goodpeople project
:: That is not a big problem only since no other project uses ruby 3.0.2
   when I did this ... so, no consequences in other projects
   IF, however, ruby 3.0.2 were used by other projects, it's almost certain
   this would have caused missing gems
:: It's possible that `% bundle`, or `% bundle update`, or `% bundle install`
   would have fixed it (haven't tried), still ..
:: KEEP THIS IN MIND

################################################################################



################################################################################
9-19-21: #######################################################################
• commit to test GitHub Personal Access Token (PAT)

################################################################################



################################################################################
1-22-21: #######################################################################
• leaving the new_framework_defaults_xx.rb files in place intact for reference

################################################################################



################################################################################
1-2-21: ########################################################################
• just an edit for a new deploy from Big Sur

################################################################################



################################################################################
6-21-18: #######################################################################
################################################################################
• Figuring out Foundation file loading set up:
  : I think, after seeing the pattern in F5 and F6,
  : the bellow set up may work for some time
  : and it looks the least hackish

: Installing foundation following gem foundation-rails github page:

    $ rails g foundation:install

: Generates these two herein relevant files:

  1)  foundation_and_overrides.scss:
        ...
        @import 'settings';
        @import 'foundation';
        ...

  2)  _settings.scss:
        ...
        Tons of settings. Overriden by foundation:install
        ...

: We're instructed to import foundation_and_overrides in:

    application.scss:
      @import "foundation_and_overrides";
      /* Add imports of custom sass/scss files here */

: Putting the two together, and since 'settings' gets re-generated by
  foundation:install, I'll have my own 'settings_override' file imported
  after 'settings', for a clean, hopefully future upgrade ready setup:

    foundation_and_overrides.scss:
      ...
      @import 'settings';
      @import 'settings_overrides';
      @import 'foundation';
      ...

    application.scss:
      @import 'foundation_and_overrides';
      /* Add imports of custom sass/scss files here */
      @import 'custom';
      ...

################################################################################
• TODO: clean up _custom.scss

################################################################################
